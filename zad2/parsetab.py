
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1F3B124BAD9D0C19449530D3CA44329F'
    
_lr_action_items = {'RETURN':([0,3,6,7,10,11,15,17,18,19,20,23,24,25,26,27,28,32,42,43,45,48,49,65,69,70,74,75,77,87,109,110,115,116,120,121,122,130,131,132,133,134,138,139,141,142,143,],[2,-18,-20,-21,-23,-19,2,-17,-16,-24,-5,-4,-22,-7,-6,2,-15,2,-39,2,2,-3,-38,-25,-11,2,-37,-26,-27,-28,-40,-10,2,2,-29,2,2,-34,-35,-36,-30,-32,2,2,-73,-31,-33,]),'WHILE':([0,3,6,7,10,11,15,17,18,19,20,23,24,25,26,27,28,32,42,43,45,48,49,65,69,70,74,75,77,87,109,110,115,116,120,121,122,130,131,132,133,134,138,139,141,142,143,],[5,-18,-20,-21,-23,-19,5,-17,-16,-24,-5,-4,-22,-7,-6,5,-15,5,-39,5,5,-3,-38,-25,-11,5,-37,-26,-27,-28,-40,-10,5,5,-29,5,5,-34,-35,-36,-30,-32,5,5,-73,-31,-33,]),'PRINT':([0,3,6,7,10,11,15,17,18,19,20,23,24,25,26,27,28,32,42,43,45,48,49,65,69,70,74,75,77,87,109,110,115,116,120,121,122,130,131,132,133,134,138,139,141,142,143,],[4,-18,-20,-21,-23,-19,4,-17,-16,-24,-5,-4,-22,-7,-6,4,-15,4,-39,4,4,-3,-38,-25,-11,4,-37,-26,-27,-28,-40,-10,4,4,-29,4,4,-34,-35,-36,-30,-32,4,4,-73,-31,-33,]),'NEQ':([1,8,13,16,21,30,34,35,38,41,80,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,118,119,129,],[-43,-45,-42,-44,-46,66,-46,66,66,66,66,-66,-65,66,66,-58,None,-51,66,None,-57,-47,-49,-48,-50,66,None,None,None,None,66,66,66,-67,-68,66,]),'LE':([1,8,13,16,21,30,34,35,38,41,80,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,118,119,129,],[-43,-45,-42,-44,-46,52,-46,52,52,52,52,-66,-65,52,52,-58,None,-51,52,None,-57,-47,-49,-48,-50,52,None,None,None,None,52,52,52,-67,-68,52,]),'%':([1,8,13,16,21,30,34,35,38,41,80,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,118,119,129,],[-43,-45,-42,-44,-46,53,-46,53,53,53,53,-66,-65,53,53,53,53,-51,53,53,53,53,-49,53,-50,53,53,53,53,53,53,53,53,-67,-68,53,]),'&':([1,8,13,16,21,30,34,35,38,41,80,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,118,119,129,],[-43,-45,-42,-44,-46,54,-46,54,54,54,54,-66,-65,54,54,-58,-63,-51,-53,-62,-57,-47,-49,-48,-50,54,-59,-61,-64,-60,54,54,54,-67,-68,54,]),')':([1,8,13,16,34,38,40,41,44,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,112,114,118,119,125,126,127,137,140,],[-43,-45,-42,-44,-46,-72,81,82,-70,115,116,-41,-66,-65,-69,118,119,121,122,-55,-58,-63,-51,-53,-62,-57,-47,-49,-48,-50,-56,-59,-61,-64,-60,-52,-54,-75,-71,-67,-68,-74,136,-77,-78,-76,]),'(':([0,2,3,4,5,6,7,9,10,11,15,17,18,19,20,21,22,23,24,25,26,27,28,32,34,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,75,76,77,83,87,109,110,113,115,116,120,121,122,130,131,132,133,134,138,139,141,142,143,],[9,9,-18,9,39,-20,-21,9,-23,-19,9,-17,-16,-24,-5,44,47,-4,-22,-7,-6,9,-15,9,44,9,-39,9,9,9,9,9,-3,-38,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-25,9,9,9,-11,9,112,-37,-26,9,-27,9,-28,-40,-10,9,9,9,-29,9,9,-34,-35,-36,-30,-32,9,9,-73,-31,-33,]),'+':([1,8,13,16,21,30,34,35,38,41,80,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,118,119,129,],[-43,-45,-42,-44,-46,57,-46,57,57,57,57,-66,-65,57,57,57,57,-51,57,57,57,-47,-49,-48,-50,57,57,57,57,57,57,57,57,-67,-68,57,]),'*':([1,8,13,16,21,30,34,35,38,41,80,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,118,119,129,],[-43,-45,-42,-44,-46,58,-46,58,58,58,58,-66,-65,58,58,58,58,-51,58,58,58,58,-49,58,-50,58,58,58,58,58,58,58,58,-67,-68,58,]),'-':([1,8,13,16,21,30,34,35,38,41,80,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,118,119,129,],[-43,-45,-42,-44,-46,59,-46,59,59,59,59,-66,-65,59,59,59,59,-51,59,59,59,-47,-49,-48,-50,59,59,59,59,59,59,59,59,-67,-68,59,]),',':([1,8,13,16,34,36,38,71,72,81,82,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,118,119,123,125,127,129,137,140,],[-43,-45,-42,-44,-46,76,-72,-13,111,-66,-65,76,-55,-58,-63,-51,-53,-62,-57,-47,-49,-48,-50,-56,-59,-61,-64,-60,-52,-54,-71,-67,-68,-12,135,-77,-14,-78,-76,]),'/':([1,8,13,16,21,30,34,35,38,41,80,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,118,119,129,],[-43,-45,-42,-44,-46,60,-46,60,60,60,60,-66,-65,60,60,60,60,-51,60,60,60,60,-49,60,-50,60,60,60,60,60,60,60,60,-67,-68,60,]),'UNTIL':([3,6,7,10,11,17,18,19,20,23,24,25,26,28,42,43,48,49,65,69,74,75,77,87,109,110,120,130,131,132,133,134,141,142,143,],[-18,-20,-21,-23,-19,-17,-16,-24,-5,-4,-22,-7,-6,-15,-39,83,-3,-38,-25,-11,-37,-26,-27,-28,-40,-10,-29,-34,-35,-36,-30,-32,-73,-31,-33,]),'INTEGER':([0,2,3,4,6,7,9,10,11,15,17,18,19,20,23,24,25,26,27,28,32,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,76,77,83,87,109,110,113,115,116,120,121,122,130,131,132,133,134,138,139,141,142,143,],[13,13,-18,13,-20,-21,13,-23,-19,13,-17,-16,-24,-5,-4,-22,-7,-6,13,-15,13,13,-39,13,13,13,13,13,-3,-38,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-25,13,13,13,-11,13,-37,-26,13,-27,13,-28,-40,-10,13,13,13,-29,13,13,-34,-35,-36,-30,-32,13,13,-73,-31,-33,]),';':([1,8,13,14,16,21,29,30,31,34,35,36,37,38,71,72,80,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,117,118,119,123,129,],[-43,-45,-42,42,-44,-46,49,65,69,-46,74,75,77,-72,-13,110,-41,-66,-65,120,-55,-58,-63,-51,-53,-62,-57,-47,-49,-48,-50,-56,-59,-61,-64,-60,-52,-54,-71,132,-67,-68,-12,-14,]),'^':([1,8,13,16,21,30,34,35,38,41,80,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,118,119,129,],[-43,-45,-42,-44,-46,68,-46,68,68,68,68,-66,-65,68,68,-58,-63,-51,-53,-62,-57,-47,-49,-48,-50,68,-59,-61,-64,-60,68,-54,68,-67,-68,68,]),'=':([21,73,124,],[46,113,113,]),'<':([1,8,13,16,21,30,34,35,38,41,80,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,118,119,129,],[-43,-45,-42,-44,-46,55,-46,55,55,55,55,-66,-65,55,55,-58,None,-51,55,None,-57,-47,-49,-48,-50,55,None,None,None,None,55,55,55,-67,-68,55,]),'$end':([0,3,6,7,10,11,12,17,18,19,20,23,24,25,26,27,28,42,48,49,65,69,74,75,77,87,109,110,120,130,131,132,133,134,141,142,143,],[-2,-18,-20,-21,-23,-19,0,-17,-16,-24,-5,-4,-22,-7,-6,-1,-15,-39,-3,-38,-25,-11,-37,-26,-27,-28,-40,-10,-29,-34,-35,-36,-30,-32,-73,-31,-33,]),'SHR':([1,8,13,16,21,30,34,35,38,41,80,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,118,119,129,],[-43,-45,-42,-44,-46,51,-46,51,51,51,51,-66,-65,51,51,-58,51,-51,51,51,-57,-47,-49,-48,-50,51,51,51,51,51,51,51,51,-67,-68,51,]),'REPEAT':([0,3,6,7,10,11,15,17,18,19,20,23,24,25,26,27,28,32,42,43,45,48,49,65,69,70,74,75,77,87,109,110,115,116,120,121,122,130,131,132,133,134,138,139,141,142,143,],[15,-18,-20,-21,-23,-19,15,-17,-16,-24,-5,-4,-22,-7,-6,15,-15,15,-39,15,15,-3,-38,-25,-11,15,-37,-26,-27,-28,-40,-10,15,15,-29,15,15,-34,-35,-36,-30,-32,15,15,-73,-31,-33,]),'STRING':([0,2,3,4,6,7,9,10,11,15,17,18,19,20,23,24,25,26,27,28,32,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,76,77,83,87,109,110,113,115,116,120,121,122,130,131,132,133,134,138,139,141,142,143,],[16,16,-18,16,-20,-21,16,-23,-19,16,-17,-16,-24,-5,-4,-22,-7,-6,16,-15,16,16,-39,16,16,16,16,16,-3,-38,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-25,16,16,16,-11,16,-37,-26,16,-27,16,-28,-40,-10,16,16,16,-29,16,16,-34,-35,-36,-30,-32,16,16,-73,-31,-33,]),'ELSE':([3,6,7,10,11,17,18,19,24,28,42,49,65,74,75,77,87,109,120,130,131,132,133,134,142,143,],[-18,-20,-21,-23,-19,-17,-16,-24,-22,-15,-39,-38,-25,-37,-26,-27,-28,-40,-29,-34,-35,-36,138,139,-31,-33,]),'GE':([1,8,13,16,21,30,34,35,38,41,80,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,118,119,129,],[-43,-45,-42,-44,-46,64,-46,64,64,64,64,-66,-65,64,64,-58,None,-51,64,None,-57,-47,-49,-48,-50,64,None,None,None,None,64,64,64,-67,-68,64,]),'EQ':([1,8,13,16,21,30,34,35,38,41,80,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,118,119,129,],[-43,-45,-42,-44,-46,62,-46,62,62,62,62,-66,-65,62,62,-58,None,-51,62,None,-57,-47,-49,-48,-50,62,None,None,None,None,62,62,62,-67,-68,62,]),'ID':([0,2,3,4,6,7,9,10,11,15,17,18,19,20,23,24,25,26,27,28,32,33,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,76,77,83,87,109,110,111,113,115,116,120,121,122,128,130,131,132,133,134,138,139,141,142,143,],[21,34,-18,34,-20,-21,34,-23,-19,21,-17,-16,-24,-5,-4,-22,-7,-6,21,-15,21,73,34,-39,21,34,21,34,34,-3,-38,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-25,34,34,34,-11,21,-37,-26,34,-27,34,-28,-40,-10,124,34,21,21,-29,21,21,137,-34,-35,-36,-30,-32,21,21,-73,-31,-33,]),'IF':([0,3,6,7,10,11,15,17,18,19,20,23,24,25,26,27,28,32,42,43,45,48,49,65,69,70,74,75,77,87,109,110,115,116,120,121,122,130,131,132,133,134,138,139,141,142,143,],[22,-18,-20,-21,-23,-19,22,-17,-16,-24,-5,-4,-22,-7,-6,22,-15,22,-39,22,22,-3,-38,-25,-11,22,-37,-26,-27,-28,-40,-10,22,22,-29,22,22,-34,-35,-36,-30,-32,22,22,-73,-31,-33,]),'AND':([1,8,13,16,21,30,34,35,38,41,80,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,118,119,129,],[-43,-45,-42,-44,-46,50,-46,50,50,50,50,-66,-65,50,-55,-58,-63,-51,-53,-62,-57,-47,-49,-48,-50,50,-59,-61,-64,-60,-52,-54,50,-67,-68,50,]),':':([21,],[45,]),'SHL':([1,8,13,16,21,30,34,35,38,41,80,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,118,119,129,],[-43,-45,-42,-44,-46,56,-46,56,56,56,56,-66,-65,56,56,-58,56,-51,56,56,-57,-47,-49,-48,-50,56,56,56,56,56,56,56,56,-67,-68,56,]),'}':([3,6,7,10,11,17,18,19,20,23,24,25,26,28,42,48,49,65,69,70,74,75,77,87,109,110,120,130,131,132,133,134,141,142,143,],[-18,-20,-21,-23,-19,-17,-16,-24,-5,-4,-22,-7,-6,-15,-39,-3,-38,-25,-11,109,-37,-26,-27,-28,-40,-10,-29,-34,-35,-36,-30,-32,-73,-31,-33,]),'FLOAT':([0,2,3,4,6,7,9,10,11,15,17,18,19,20,23,24,25,26,27,28,32,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,76,77,83,87,109,110,113,115,116,120,121,122,130,131,132,133,134,138,139,141,142,143,],[1,1,-18,1,-20,-21,1,-23,-19,1,-17,-16,-24,-5,-4,-22,-7,-6,1,-15,1,1,-39,1,1,1,1,1,-3,-38,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-25,1,1,1,-11,1,-37,-26,1,-27,1,-28,-40,-10,1,1,1,-29,1,1,-34,-35,-36,-30,-32,1,1,-73,-31,-33,]),'|':([1,8,13,16,21,30,34,35,38,41,80,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,118,119,129,],[-43,-45,-42,-44,-46,67,-46,67,67,67,67,-66,-65,67,67,-58,-63,-51,-53,-62,-57,-47,-49,-48,-50,67,-59,-61,-64,-60,-52,-54,67,-67,-68,67,]),'BREAK':([0,3,6,7,10,11,15,17,18,19,20,23,24,25,26,27,28,32,42,43,45,48,49,65,69,70,74,75,77,87,109,110,115,116,120,121,122,130,131,132,133,134,138,139,141,142,143,],[14,-18,-20,-21,-23,-19,14,-17,-16,-24,-5,-4,-22,-7,-6,14,-15,14,-39,14,14,-3,-38,-25,-11,14,-37,-26,-27,-28,-40,-10,14,14,-29,14,14,-34,-35,-36,-30,-32,14,14,-73,-31,-33,]),'CONTINUE':([0,3,6,7,10,11,15,17,18,19,20,23,24,25,26,27,28,32,42,43,45,48,49,65,69,70,74,75,77,87,109,110,115,116,120,121,122,130,131,132,133,134,138,139,141,142,143,],[29,-18,-20,-21,-23,-19,29,-17,-16,-24,-5,-4,-22,-7,-6,29,-15,29,-39,29,29,-3,-38,-25,-11,29,-37,-26,-27,-28,-40,-10,29,29,-29,29,29,-34,-35,-36,-30,-32,29,29,-73,-31,-33,]),'error':([0,3,4,6,7,9,10,11,15,17,18,19,20,23,24,25,26,27,28,32,39,42,43,44,47,48,49,65,69,70,74,75,77,87,109,110,120,130,131,132,133,134,141,142,143,],[31,-18,37,-20,-21,40,-23,-19,31,-17,-16,-24,-5,-4,-22,-7,-6,31,-15,31,79,-39,31,86,90,-3,-38,-25,-11,31,-37,-26,-27,-28,-40,-10,-29,-34,-35,-36,-30,-32,-73,-31,-33,]),'{':([0,3,6,7,10,11,15,17,18,19,20,23,24,25,26,27,28,32,42,43,45,48,49,65,69,70,74,75,77,87,109,110,115,116,120,121,122,130,131,132,133,134,136,138,139,141,142,143,],[32,-18,-20,-21,-23,-19,32,-17,-16,-24,-5,-4,-22,-7,-6,32,-15,32,-39,32,32,-3,-38,-25,-11,32,-37,-26,-27,-28,-40,-10,32,32,-29,32,32,-34,-35,-36,-30,-32,32,32,32,-73,-31,-33,]),'>':([1,8,13,16,21,30,34,35,38,41,80,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,118,119,129,],[-43,-45,-42,-44,-46,63,-46,63,63,63,63,-66,-65,63,63,-58,None,-51,63,None,-57,-47,-49,-48,-50,63,None,None,None,None,63,63,63,-67,-68,63,]),'TYPE':([0,3,6,7,10,11,15,17,18,19,20,23,24,25,26,27,28,32,42,43,48,49,65,69,70,74,75,77,87,109,110,112,120,130,131,132,133,134,135,141,142,143,],[33,-18,-20,-21,-23,-19,33,-17,-16,-24,-5,-4,-22,-7,-6,33,-15,33,-39,33,-3,-38,-25,-11,33,-37,-26,-27,-28,-40,-10,128,-29,-34,-35,-36,-30,-32,128,-73,-31,-33,]),'OR':([1,8,13,16,21,30,34,35,38,41,80,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,118,119,129,],[-43,-45,-42,-44,-46,61,-46,61,61,61,61,-66,-65,61,-55,-58,-63,-51,-53,-62,-57,-47,-49,-48,-50,-56,-59,-61,-64,-60,-52,-54,61,-67,-68,61,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr_list':([4,44,],[36,84,]),'choice_instr':([0,15,27,32,43,45,70,115,116,121,122,138,139,],[3,3,3,3,3,3,3,3,3,3,3,3,3,]),'arg':([112,135,],[127,140,]),'repeat_instr':([0,15,27,32,43,45,70,115,116,121,122,138,139,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'return_instr':([0,15,27,32,43,45,70,115,116,121,122,138,139,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'const':([0,2,4,9,15,27,32,39,43,44,45,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,70,76,83,113,115,116,121,122,138,139,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'continue_instr':([0,15,27,32,43,45,70,115,116,121,122,138,139,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'while_instr':([0,15,27,32,43,45,70,115,116,121,122,138,139,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'init':([33,111,],[71,123,]),'program':([0,],[12,]),'assignment':([0,15,27,32,43,45,70,115,116,121,122,138,139,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'labeled_instr':([0,15,27,32,43,45,70,115,116,121,122,138,139,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'compound_instr':([0,15,27,32,43,45,70,115,116,121,122,136,138,139,],[19,19,19,19,19,19,19,19,19,19,19,141,19,19,]),'inits':([33,],[72,]),'declaration':([0,15,27,32,43,70,],[20,20,20,20,20,20,]),'args_list':([112,],[125,]),'condition':([39,47,83,],[78,89,117,]),'expr_list_or_empty':([44,],[85,]),'anything':([0,15,27,32,43,70,],[23,23,48,23,48,48,]),'break_instr':([0,15,27,32,43,45,70,115,116,121,122,138,139,],[24,24,24,24,24,24,24,24,24,24,24,24,24,]),'instruction':([0,15,27,32,43,45,70,115,116,121,122,138,139,],[25,25,25,25,25,87,25,130,131,133,134,142,143,]),'args_list_or_empty':([112,],[126,]),'fundef':([0,15,27,32,43,70,],[26,26,26,26,26,26,]),'anything_list':([0,15,32,],[27,43,70,]),'print_instr':([0,15,27,32,43,45,70,115,116,121,122,138,139,],[28,28,28,28,28,28,28,28,28,28,28,28,28,]),'expression':([0,2,4,9,15,27,32,39,43,44,45,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,70,76,83,113,115,116,121,122,138,139,],[30,35,38,41,30,30,30,80,30,38,30,88,80,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,30,114,80,129,30,30,30,30,30,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> anything_list','program',1,'p_program','Cparser.py',38),
  ('program -> <empty>','program',0,'p_program','Cparser.py',39),
  ('anything_list -> anything_list anything','anything_list',2,'p_anything_list','Cparser.py',45),
  ('anything_list -> anything','anything_list',1,'p_anything_list','Cparser.py',46),
  ('anything -> declaration','anything',1,'p_anything','Cparser.py',55),
  ('anything -> fundef','anything',1,'p_anything','Cparser.py',56),
  ('anything -> instruction','anything',1,'p_anything','Cparser.py',57),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',62),
  ('declarations -> declaration','declarations',1,'p_declarations','Cparser.py',63),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',72),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',73),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',82),
  ('inits -> init','inits',1,'p_inits','Cparser.py',83),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',92),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',114),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',115),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',116),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',117),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',118),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',119),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',120),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',121),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',122),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',123),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',124),
  ('print_instr -> PRINT expr_list ;','print_instr',3,'p_print_instr','Cparser.py',128),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',129),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',134),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',140),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',146),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',147),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',148),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',149),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',156),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',157),
  ('repeat_instr -> REPEAT anything_list UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',163),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',169),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',174),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',178),
  ('compound_instr -> { anything_list }','compound_instr',3,'p_compound_instr','Cparser.py',182),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',187),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',191),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',192),
  ('const -> STRING','const',1,'p_const','Cparser.py',193),
  ('expression -> const','expression',1,'p_expression','Cparser.py',197),
  ('expression -> ID','expression',1,'p_expression','Cparser.py',198),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',199),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',200),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',201),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',202),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',203),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',204),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',205),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',206),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',207),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',208),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',209),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',210),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',211),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',212),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',213),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',214),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',215),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',216),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',217),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',218),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',219),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',220),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',238),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',239),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',243),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',244),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',267),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',278),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',279),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',283),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',284),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',293),
]
