
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '5735FE5BD25ED55B88BBD87882F7B105'
    
_lr_action_items = {'RETURN':([0,3,6,7,10,11,15,17,18,19,20,23,24,25,26,27,28,32,41,42,44,47,48,64,68,69,73,74,75,86,108,109,113,114,119,120,121,129,130,131,133,134,138,139,141,142,143,],[2,-16,-18,-19,-21,-17,2,-15,-14,-22,-5,-4,-20,-7,-6,2,-13,2,-37,2,2,-3,-36,-23,-9,2,-35,-25,-24,-26,-38,-8,2,2,-27,2,2,-32,-33,-34,-28,-30,2,2,-71,-29,-31,]),'WHILE':([0,3,6,7,10,11,15,17,18,19,20,23,24,25,26,27,28,32,41,42,44,47,48,64,68,69,73,74,75,86,108,109,113,114,119,120,121,129,130,131,133,134,138,139,141,142,143,],[5,-16,-18,-19,-21,-17,5,-15,-14,-22,-5,-4,-20,-7,-6,5,-13,5,-37,5,5,-3,-36,-23,-9,5,-35,-25,-24,-26,-38,-8,5,5,-27,5,5,-32,-33,-34,-28,-30,5,5,-71,-29,-31,]),'PRINT':([0,3,6,7,10,11,15,17,18,19,20,23,24,25,26,27,28,32,41,42,44,47,48,64,68,69,73,74,75,86,108,109,113,114,119,120,121,129,130,131,133,134,138,139,141,142,143,],[4,-16,-18,-19,-21,-17,4,-15,-14,-22,-5,-4,-20,-7,-6,4,-13,4,-37,4,4,-3,-36,-23,-9,4,-35,-25,-24,-26,-38,-8,4,4,-27,4,4,-32,-33,-34,-28,-30,4,4,-71,-29,-31,]),'NEQ':([1,8,13,16,21,30,34,35,37,40,78,79,80,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,118,128,132,],[-41,-44,-40,-42,-43,65,-43,65,65,65,65,-64,-63,65,65,65,-56,None,-49,65,None,-55,-45,-47,-46,-48,65,None,None,None,None,65,65,-65,-66,65,65,]),'LE':([1,8,13,16,21,30,34,35,37,40,78,79,80,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,118,128,132,],[-41,-44,-40,-42,-43,51,-43,51,51,51,51,-64,-63,51,51,51,-56,None,-49,51,None,-55,-45,-47,-46,-48,51,None,None,None,None,51,51,-65,-66,51,51,]),'%':([1,8,13,16,21,30,34,35,37,40,78,79,80,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,118,128,132,],[-41,-44,-40,-42,-43,52,-43,52,52,52,52,-64,-63,52,52,52,52,52,-49,52,52,52,52,-47,52,-48,52,52,52,52,52,52,52,-65,-66,52,52,]),'&':([1,8,13,16,21,30,34,35,37,40,78,79,80,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,118,128,132,],[-41,-44,-40,-42,-43,53,-43,53,53,53,53,-64,-63,53,53,53,-56,-61,-49,-51,-60,-55,-45,-47,-46,-48,53,-57,-59,-62,-58,53,53,-65,-66,53,53,]),')':([1,8,13,16,34,39,40,43,76,77,78,79,80,82,83,84,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,117,118,124,125,126,132,137,140,],[-41,-44,-40,-42,-43,79,80,-68,113,114,-39,-64,-63,-67,117,118,-70,120,121,-53,-56,-61,-49,-51,-60,-55,-45,-47,-46,-48,-54,-57,-59,-62,-58,-50,-52,-73,-65,-66,-72,136,-75,-69,-76,-74,]),'(':([0,2,3,4,5,6,7,9,10,11,15,17,18,19,20,21,22,23,24,25,26,27,28,32,34,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,81,86,108,109,112,113,114,116,119,120,121,129,130,131,133,134,138,139,141,142,143,],[9,9,-16,9,38,-18,-19,9,-21,-17,9,-15,-14,-22,-5,43,46,-4,-20,-7,-6,9,-13,9,43,9,-37,9,9,9,9,9,-3,-36,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-23,9,9,9,-9,9,111,-35,-25,-24,9,-26,-38,-8,9,9,9,9,-27,9,9,-32,-33,-34,-28,-30,9,9,-71,-29,-31,]),'+':([1,8,13,16,21,30,34,35,37,40,78,79,80,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,118,128,132,],[-41,-44,-40,-42,-43,56,-43,56,56,56,56,-64,-63,56,56,56,56,56,-49,56,56,56,-45,-47,-46,-48,56,56,56,56,56,56,56,-65,-66,56,56,]),'*':([1,8,13,16,21,30,34,35,37,40,78,79,80,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,118,128,132,],[-41,-44,-40,-42,-43,57,-43,57,57,57,57,-64,-63,57,57,57,57,57,-49,57,57,57,57,-47,57,-48,57,57,57,57,57,57,57,-65,-66,57,57,]),'-':([1,8,13,16,21,30,34,35,37,40,78,79,80,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,118,128,132,],[-41,-44,-40,-42,-43,58,-43,58,58,58,58,-64,-63,58,58,58,58,58,-49,58,58,58,-45,-47,-46,-48,58,58,58,58,58,58,58,-65,-66,58,58,]),',':([1,8,13,16,34,70,71,79,80,82,85,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,118,122,124,126,128,132,137,140,],[-41,-44,-40,-42,-43,-11,110,-64,-63,116,-70,-53,-56,-61,-49,-51,-60,-55,-45,-47,-46,-48,-54,-57,-59,-62,-58,-50,-52,-65,-66,-10,135,-75,-12,-69,-76,-74,]),'/':([1,8,13,16,21,30,34,35,37,40,78,79,80,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,118,128,132,],[-41,-44,-40,-42,-43,59,-43,59,59,59,59,-64,-63,59,59,59,59,59,-49,59,59,59,59,-47,59,-48,59,59,59,59,59,59,59,-65,-66,59,59,]),'UNTIL':([3,6,7,10,11,17,18,19,20,23,24,25,26,28,41,42,47,48,64,68,73,74,75,86,108,109,119,129,130,131,133,134,141,142,143,],[-16,-18,-19,-21,-17,-15,-14,-22,-5,-4,-20,-7,-6,-13,-37,81,-3,-36,-23,-9,-35,-25,-24,-26,-38,-8,-27,-32,-33,-34,-28,-30,-71,-29,-31,]),'INTEGER':([0,2,3,4,6,7,9,10,11,15,17,18,19,20,23,24,25,26,27,28,32,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,81,86,108,109,112,113,114,116,119,120,121,129,130,131,133,134,138,139,141,142,143,],[13,13,-16,13,-18,-19,13,-21,-17,13,-15,-14,-22,-5,-4,-20,-7,-6,13,-13,13,13,-37,13,13,13,13,13,-3,-36,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-23,13,13,13,-9,13,-35,-25,-24,13,-26,-38,-8,13,13,13,13,-27,13,13,-32,-33,-34,-28,-30,13,13,-71,-29,-31,]),';':([1,8,13,14,16,21,29,30,31,34,35,36,37,70,71,78,79,80,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,115,117,118,122,128,],[-41,-44,-40,41,-42,-43,48,64,68,-43,73,74,75,-11,109,-39,-64,-63,119,-53,-56,-61,-49,-51,-60,-55,-45,-47,-46,-48,-54,-57,-59,-62,-58,-50,-52,131,-65,-66,-10,-12,]),'^':([1,8,13,16,21,30,34,35,37,40,78,79,80,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,118,128,132,],[-41,-44,-40,-42,-43,67,-43,67,67,67,67,-64,-63,67,67,67,-56,-61,-49,-51,-60,-55,-45,-47,-46,-48,67,-57,-59,-62,-58,67,-52,-65,-66,67,67,]),'=':([21,72,123,],[45,112,112,]),'<':([1,8,13,16,21,30,34,35,37,40,78,79,80,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,118,128,132,],[-41,-44,-40,-42,-43,54,-43,54,54,54,54,-64,-63,54,54,54,-56,None,-49,54,None,-55,-45,-47,-46,-48,54,None,None,None,None,54,54,-65,-66,54,54,]),'$end':([0,3,6,7,10,11,12,17,18,19,20,23,24,25,26,27,28,41,47,48,64,68,73,74,75,86,108,109,119,129,130,131,133,134,141,142,143,],[-2,-16,-18,-19,-21,-17,0,-15,-14,-22,-5,-4,-20,-7,-6,-1,-13,-37,-3,-36,-23,-9,-35,-25,-24,-26,-38,-8,-27,-32,-33,-34,-28,-30,-71,-29,-31,]),'SHR':([1,8,13,16,21,30,34,35,37,40,78,79,80,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,118,128,132,],[-41,-44,-40,-42,-43,50,-43,50,50,50,50,-64,-63,50,50,50,-56,50,-49,50,50,-55,-45,-47,-46,-48,50,50,50,50,50,50,50,-65,-66,50,50,]),'REPEAT':([0,3,6,7,10,11,15,17,18,19,20,23,24,25,26,27,28,32,41,42,44,47,48,64,68,69,73,74,75,86,108,109,113,114,119,120,121,129,130,131,133,134,138,139,141,142,143,],[15,-16,-18,-19,-21,-17,15,-15,-14,-22,-5,-4,-20,-7,-6,15,-13,15,-37,15,15,-3,-36,-23,-9,15,-35,-25,-24,-26,-38,-8,15,15,-27,15,15,-32,-33,-34,-28,-30,15,15,-71,-29,-31,]),'STRING':([0,2,3,4,6,7,9,10,11,15,17,18,19,20,23,24,25,26,27,28,32,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,81,86,108,109,112,113,114,116,119,120,121,129,130,131,133,134,138,139,141,142,143,],[16,16,-16,16,-18,-19,16,-21,-17,16,-15,-14,-22,-5,-4,-20,-7,-6,16,-13,16,16,-37,16,16,16,16,16,-3,-36,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-23,16,16,16,-9,16,-35,-25,-24,16,-26,-38,-8,16,16,16,16,-27,16,16,-32,-33,-34,-28,-30,16,16,-71,-29,-31,]),'ELSE':([3,6,7,10,11,17,18,19,24,28,41,48,64,73,74,75,86,108,119,129,130,131,133,134,142,143,],[-16,-18,-19,-21,-17,-15,-14,-22,-20,-13,-37,-36,-23,-35,-25,-24,-26,-38,-27,-32,-33,-34,138,139,-29,-31,]),'GE':([1,8,13,16,21,30,34,35,37,40,78,79,80,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,118,128,132,],[-41,-44,-40,-42,-43,63,-43,63,63,63,63,-64,-63,63,63,63,-56,None,-49,63,None,-55,-45,-47,-46,-48,63,None,None,None,None,63,63,-65,-66,63,63,]),'EQ':([1,8,13,16,21,30,34,35,37,40,78,79,80,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,118,128,132,],[-41,-44,-40,-42,-43,61,-43,61,61,61,61,-64,-63,61,61,61,-56,None,-49,61,None,-55,-45,-47,-46,-48,61,None,None,None,None,61,61,-65,-66,61,61,]),'ID':([0,2,3,4,6,7,9,10,11,15,17,18,19,20,23,24,25,26,27,28,32,33,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,81,86,108,109,110,112,113,114,116,119,120,121,127,129,130,131,133,134,138,139,141,142,143,],[21,34,-16,34,-18,-19,34,-21,-17,21,-15,-14,-22,-5,-4,-20,-7,-6,21,-13,21,72,34,-37,21,34,21,34,34,-3,-36,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-23,34,34,34,-9,21,-35,-25,-24,34,-26,-38,-8,123,34,21,21,34,-27,21,21,137,-32,-33,-34,-28,-30,21,21,-71,-29,-31,]),'IF':([0,3,6,7,10,11,15,17,18,19,20,23,24,25,26,27,28,32,41,42,44,47,48,64,68,69,73,74,75,86,108,109,113,114,119,120,121,129,130,131,133,134,138,139,141,142,143,],[22,-16,-18,-19,-21,-17,22,-15,-14,-22,-5,-4,-20,-7,-6,22,-13,22,-37,22,22,-3,-36,-23,-9,22,-35,-25,-24,-26,-38,-8,22,22,-27,22,22,-32,-33,-34,-28,-30,22,22,-71,-29,-31,]),'AND':([1,8,13,16,21,30,34,35,37,40,78,79,80,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,118,128,132,],[-41,-44,-40,-42,-43,49,-43,49,49,49,49,-64,-63,49,49,-53,-56,-61,-49,-51,-60,-55,-45,-47,-46,-48,49,-57,-59,-62,-58,-50,-52,-65,-66,49,49,]),':':([21,],[44,]),'SHL':([1,8,13,16,21,30,34,35,37,40,78,79,80,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,118,128,132,],[-41,-44,-40,-42,-43,55,-43,55,55,55,55,-64,-63,55,55,55,-56,55,-49,55,55,-55,-45,-47,-46,-48,55,55,55,55,55,55,55,-65,-66,55,55,]),'}':([3,6,7,10,11,17,18,19,20,23,24,25,26,28,41,47,48,64,68,69,73,74,75,86,108,109,119,129,130,131,133,134,141,142,143,],[-16,-18,-19,-21,-17,-15,-14,-22,-5,-4,-20,-7,-6,-13,-37,-3,-36,-23,-9,108,-35,-25,-24,-26,-38,-8,-27,-32,-33,-34,-28,-30,-71,-29,-31,]),'FLOAT':([0,2,3,4,6,7,9,10,11,15,17,18,19,20,23,24,25,26,27,28,32,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,81,86,108,109,112,113,114,116,119,120,121,129,130,131,133,134,138,139,141,142,143,],[1,1,-16,1,-18,-19,1,-21,-17,1,-15,-14,-22,-5,-4,-20,-7,-6,1,-13,1,1,-37,1,1,1,1,1,-3,-36,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-23,1,1,1,-9,1,-35,-25,-24,1,-26,-38,-8,1,1,1,1,-27,1,1,-32,-33,-34,-28,-30,1,1,-71,-29,-31,]),'|':([1,8,13,16,21,30,34,35,37,40,78,79,80,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,118,128,132,],[-41,-44,-40,-42,-43,66,-43,66,66,66,66,-64,-63,66,66,66,-56,-61,-49,-51,-60,-55,-45,-47,-46,-48,66,-57,-59,-62,-58,-50,-52,-65,-66,66,66,]),'BREAK':([0,3,6,7,10,11,15,17,18,19,20,23,24,25,26,27,28,32,41,42,44,47,48,64,68,69,73,74,75,86,108,109,113,114,119,120,121,129,130,131,133,134,138,139,141,142,143,],[14,-16,-18,-19,-21,-17,14,-15,-14,-22,-5,-4,-20,-7,-6,14,-13,14,-37,14,14,-3,-36,-23,-9,14,-35,-25,-24,-26,-38,-8,14,14,-27,14,14,-32,-33,-34,-28,-30,14,14,-71,-29,-31,]),'CONTINUE':([0,3,6,7,10,11,15,17,18,19,20,23,24,25,26,27,28,32,41,42,44,47,48,64,68,69,73,74,75,86,108,109,113,114,119,120,121,129,130,131,133,134,138,139,141,142,143,],[29,-16,-18,-19,-21,-17,29,-15,-14,-22,-5,-4,-20,-7,-6,29,-13,29,-37,29,29,-3,-36,-23,-9,29,-35,-25,-24,-26,-38,-8,29,29,-27,29,29,-32,-33,-34,-28,-30,29,29,-71,-29,-31,]),'error':([0,3,4,6,7,9,10,11,15,17,18,19,20,23,24,25,26,27,28,32,38,41,42,43,46,47,48,64,68,69,73,74,75,86,108,109,119,129,130,131,133,134,141,142,143,],[31,-16,36,-18,-19,39,-21,-17,31,-15,-14,-22,-5,-4,-20,-7,-6,31,-13,31,77,-37,31,84,89,-3,-36,-23,-9,31,-35,-25,-24,-26,-38,-8,-27,-32,-33,-34,-28,-30,-71,-29,-31,]),'{':([0,3,6,7,10,11,15,17,18,19,20,23,24,25,26,27,28,32,41,42,44,47,48,64,68,69,73,74,75,86,108,109,113,114,119,120,121,129,130,131,133,134,136,138,139,141,142,143,],[32,-16,-18,-19,-21,-17,32,-15,-14,-22,-5,-4,-20,-7,-6,32,-13,32,-37,32,32,-3,-36,-23,-9,32,-35,-25,-24,-26,-38,-8,32,32,-27,32,32,-32,-33,-34,-28,-30,32,32,32,-71,-29,-31,]),'>':([1,8,13,16,21,30,34,35,37,40,78,79,80,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,118,128,132,],[-41,-44,-40,-42,-43,62,-43,62,62,62,62,-64,-63,62,62,62,-56,None,-49,62,None,-55,-45,-47,-46,-48,62,None,None,None,None,62,62,-65,-66,62,62,]),'TYPE':([0,3,6,7,10,11,15,17,18,19,20,23,24,25,26,27,28,32,41,42,47,48,64,68,69,73,74,75,86,108,109,111,119,129,130,131,133,134,135,141,142,143,],[33,-16,-18,-19,-21,-17,33,-15,-14,-22,-5,-4,-20,-7,-6,33,-13,33,-37,33,-3,-36,-23,-9,33,-35,-25,-24,-26,-38,-8,127,-27,-32,-33,-34,-28,-30,127,-71,-29,-31,]),'OR':([1,8,13,16,21,30,34,35,37,40,78,79,80,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,118,128,132,],[-41,-44,-40,-42,-43,60,-43,60,60,60,60,-64,-63,60,60,-53,-56,-61,-49,-51,-60,-55,-45,-47,-46,-48,-54,-57,-59,-62,-58,-50,-52,-65,-66,60,60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr_list':([43,],[82,]),'choice_instr':([0,15,27,32,42,44,69,113,114,120,121,138,139,],[3,3,3,3,3,3,3,3,3,3,3,3,3,]),'arg':([111,135,],[126,140,]),'repeat_instr':([0,15,27,32,42,44,69,113,114,120,121,138,139,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'return_instr':([0,15,27,32,42,44,69,113,114,120,121,138,139,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'const':([0,2,4,9,15,27,32,38,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,81,112,113,114,116,120,121,138,139,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'continue_instr':([0,15,27,32,42,44,69,113,114,120,121,138,139,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'while_instr':([0,15,27,32,42,44,69,113,114,120,121,138,139,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'init':([33,110,],[70,122,]),'program':([0,],[12,]),'assignment':([0,15,27,32,42,44,69,113,114,120,121,138,139,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'labeled_instr':([0,15,27,32,42,44,69,113,114,120,121,138,139,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'compound_instr':([0,15,27,32,42,44,69,113,114,120,121,136,138,139,],[19,19,19,19,19,19,19,19,19,19,19,141,19,19,]),'inits':([33,],[71,]),'declaration':([0,15,27,32,42,69,],[20,20,20,20,20,20,]),'args_list':([111,],[124,]),'condition':([38,46,81,],[76,88,115,]),'expr_list_or_empty':([43,],[83,]),'anything':([0,15,27,32,42,69,],[23,23,47,23,47,47,]),'break_instr':([0,15,27,32,42,44,69,113,114,120,121,138,139,],[24,24,24,24,24,24,24,24,24,24,24,24,24,]),'instruction':([0,15,27,32,42,44,69,113,114,120,121,138,139,],[25,25,25,25,25,86,25,129,130,133,134,142,143,]),'args_list_or_empty':([111,],[125,]),'fundef':([0,15,27,32,42,69,],[26,26,26,26,26,26,]),'anything_list':([0,15,32,],[27,42,69,]),'print_instr':([0,15,27,32,42,44,69,113,114,120,121,138,139,],[28,28,28,28,28,28,28,28,28,28,28,28,28,]),'expression':([0,2,4,9,15,27,32,38,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,81,112,113,114,116,120,121,138,139,],[30,35,37,40,30,30,30,78,30,85,30,87,78,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,30,78,128,30,30,132,30,30,30,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> anything_list','program',1,'p_program','Cparser.py',41),
  ('program -> <empty>','program',0,'p_program','Cparser.py',42),
  ('anything_list -> anything_list anything','anything_list',2,'p_anything_list','Cparser.py',49),
  ('anything_list -> anything','anything_list',1,'p_anything_list','Cparser.py',50),
  ('anything -> declaration','anything',1,'p_anything','Cparser.py',59),
  ('anything -> fundef','anything',1,'p_anything','Cparser.py',60),
  ('anything -> instruction','anything',1,'p_anything','Cparser.py',61),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',66),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',67),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',77),
  ('inits -> init','inits',1,'p_inits','Cparser.py',78),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',87),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',93),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',94),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',95),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',96),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',97),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',98),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',99),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',100),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',101),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',102),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',103),
  ('print_instr -> PRINT expression ;','print_instr',3,'p_print_instr','Cparser.py',107),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',108),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',118),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',124),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',130),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',131),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',132),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',133),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',144),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',145),
  ('repeat_instr -> REPEAT anything_list UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',155),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',161),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',166),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',170),
  ('compound_instr -> { anything_list }','compound_instr',3,'p_compound_instr','Cparser.py',174),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',179),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',183),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',184),
  ('const -> STRING','const',1,'p_const','Cparser.py',185),
  ('expression -> ID','expression',1,'p_expressionId','Cparser.py',194),
  ('expression -> const','expression',1,'p_expression','Cparser.py',198),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',199),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',200),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',201),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',202),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',203),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',204),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',205),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',206),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',207),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',208),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',209),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',210),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',211),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',212),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',213),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',214),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',215),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',216),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',217),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',218),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',219),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',220),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',241),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',242),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',246),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',247),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',256),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',267),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',268),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',272),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',273),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',282),
]
