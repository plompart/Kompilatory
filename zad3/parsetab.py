
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '56F268498E786162F91157712ECCC78C'
    
_lr_action_items = {'RETURN':([0,1,3,5,8,9,12,13,16,18,19,20,21,25,26,27,28,29,33,35,45,46,48,51,52,56,72,77,78,80,90,94,98,118,119,123,124,125,132,133,134,135,136,140,141,143,144,145,],[-3,4,-4,-17,-19,-20,-22,-18,-3,-16,-15,-23,-8,-2,-21,-6,-5,-14,-3,-7,-38,4,4,-37,-10,4,-24,-36,-25,-26,-27,-9,-39,4,4,-28,4,4,-33,-34,-35,-29,-31,4,4,-72,-30,-32,]),'WHILE':([0,1,3,5,8,9,12,13,16,18,19,20,21,25,26,27,28,29,33,35,45,46,48,51,52,56,72,77,78,80,90,94,98,118,119,123,124,125,132,133,134,135,136,140,141,143,144,145,],[-3,7,-4,-17,-19,-20,-22,-18,-3,-16,-15,-23,-8,-2,-21,-6,-5,-14,-3,-7,-38,7,7,-37,-10,7,-24,-36,-25,-26,-27,-9,-39,7,7,-28,7,7,-33,-34,-35,-29,-31,7,7,-72,-30,-32,]),'PRINT':([0,1,3,5,8,9,12,13,16,18,19,20,21,25,26,27,28,29,33,35,45,46,48,51,52,56,72,77,78,80,90,94,98,118,119,123,124,125,132,133,134,135,136,140,141,143,144,145,],[-3,6,-4,-17,-19,-20,-22,-18,-3,-16,-15,-23,-8,-2,-21,-6,-5,-14,-3,-7,-38,6,6,-37,-10,6,-24,-36,-25,-26,-27,-9,-39,6,6,-28,6,6,-33,-34,-35,-29,-31,6,6,-72,-30,-32,]),'NEQ':([10,14,17,22,24,34,37,38,41,44,83,84,85,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,131,],[-45,-41,-43,-44,-42,73,-44,73,73,73,73,-65,-64,73,73,-57,None,-50,73,None,-56,-46,-48,-47,-49,73,None,None,None,None,73,73,73,-66,-67,73,]),'LE':([10,14,17,22,24,34,37,38,41,44,83,84,85,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,131,],[-45,-41,-43,-44,-42,59,-44,59,59,59,59,-65,-64,59,59,-57,None,-50,59,None,-56,-46,-48,-47,-49,59,None,None,None,None,59,59,59,-66,-67,59,]),'%':([10,14,17,22,24,34,37,38,41,44,83,84,85,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,131,],[-45,-41,-43,-44,-42,60,-44,60,60,60,60,-65,-64,60,60,60,60,-50,60,60,60,60,-48,60,-49,60,60,60,60,60,60,60,60,-66,-67,60,]),'&':([10,14,17,22,24,34,37,38,41,44,83,84,85,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,131,],[-45,-41,-43,-44,-42,61,-44,61,61,61,61,-65,-64,61,61,-57,-62,-50,-52,-61,-56,-46,-48,-47,-49,61,-58,-60,-63,-59,61,61,61,-66,-67,61,]),')':([10,14,17,24,37,41,43,44,47,81,82,83,84,85,87,88,89,92,93,96,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,127,128,129,139,142,],[-45,-41,-43,-42,-44,-71,84,85,-69,118,119,-40,-65,-64,-68,121,122,124,125,-74,-54,-57,-62,-50,-52,-61,-56,-46,-48,-47,-49,-55,-58,-60,-63,-59,-51,-53,-70,-66,-67,-73,138,-76,-77,-75,]),'(':([0,1,3,4,5,6,7,8,9,11,12,13,16,18,19,20,21,22,23,25,26,27,28,29,33,35,37,42,45,46,47,48,49,50,51,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,86,90,94,97,98,118,119,123,124,125,132,133,134,135,136,140,141,143,144,145,],[-3,11,-4,11,-17,11,42,-19,-20,11,-22,-18,-3,-16,-15,-23,-8,47,50,-2,-21,-6,-5,-14,-3,-7,47,11,-38,11,11,11,11,11,-37,-10,96,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-24,11,11,11,-36,-25,11,-26,11,-27,-9,11,-39,11,11,-28,11,11,-33,-34,-35,-29,-31,11,11,-72,-30,-32,]),'+':([10,14,17,22,24,34,37,38,41,44,83,84,85,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,131,],[-45,-41,-43,-44,-42,64,-44,64,64,64,64,-65,-64,64,64,64,64,-50,64,64,64,-46,-48,-47,-49,64,64,64,64,64,64,64,64,-66,-67,64,]),'*':([10,14,17,22,24,34,37,38,41,44,83,84,85,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,131,],[-45,-41,-43,-44,-42,65,-44,65,65,65,65,-65,-64,65,65,65,65,-50,65,65,65,65,-48,65,-49,65,65,65,65,65,65,65,65,-66,-67,65,]),'-':([10,14,17,22,24,34,37,38,41,44,83,84,85,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,131,],[-45,-41,-43,-44,-42,66,-44,66,66,66,66,-65,-64,66,66,66,66,-50,66,66,66,-46,-48,-47,-49,66,66,66,66,66,66,66,66,-66,-67,66,]),',':([10,14,17,24,37,39,41,53,54,84,85,87,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,126,127,129,131,139,142,],[-45,-41,-43,-42,-44,79,-71,-12,95,-65,-64,79,-54,-57,-62,-50,-52,-61,-56,-46,-48,-47,-49,-55,-58,-60,-63,-59,-51,-53,-70,-66,-67,-11,137,-76,-13,-77,-75,]),'/':([10,14,17,22,24,34,37,38,41,44,83,84,85,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,131,],[-45,-41,-43,-44,-42,67,-44,67,67,67,67,-65,-64,67,67,67,67,-50,67,67,67,67,-48,67,-49,67,67,67,67,67,67,67,67,-66,-67,67,]),'ID':([0,1,3,4,5,6,8,9,11,12,13,16,18,19,20,21,25,26,27,28,29,32,33,35,36,42,45,46,47,48,49,50,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,86,90,94,95,97,98,118,119,123,124,125,130,132,133,134,135,136,140,141,143,144,145,],[-3,22,-4,37,-17,37,-19,-20,37,-22,-18,-3,-16,-15,-23,-8,-2,-21,-6,-5,-14,55,-3,-7,76,37,-38,22,37,22,37,37,-37,-10,22,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-24,37,37,37,-36,-25,37,-26,37,-27,-9,76,37,-39,22,22,-28,22,22,139,-33,-34,-35,-29,-31,22,22,-72,-30,-32,]),'INTEGER':([0,1,3,4,5,6,8,9,11,12,13,16,18,19,20,21,25,26,27,28,29,33,35,42,45,46,47,48,49,50,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,86,90,94,97,98,118,119,123,124,125,132,133,134,135,136,140,141,143,144,145,],[-3,14,-4,14,-17,14,-19,-20,14,-22,-18,-3,-16,-15,-23,-8,-2,-21,-6,-5,-14,-3,-7,14,-38,14,14,14,14,14,-37,-10,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-24,14,14,14,-36,-25,14,-26,14,-27,-9,14,-39,14,14,-28,14,14,-33,-34,-35,-29,-31,14,14,-72,-30,-32,]),';':([10,14,15,17,22,24,30,31,34,37,38,39,40,41,53,54,83,84,85,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,120,121,122,126,131,],[-45,-41,45,-43,-44,-42,51,52,72,-44,77,78,80,-71,-12,94,-40,-65,-64,123,-54,-57,-62,-50,-52,-61,-56,-46,-48,-47,-49,-55,-58,-60,-63,-59,-51,-53,-70,134,-66,-67,-11,-13,]),'^':([10,14,17,22,24,34,37,38,41,44,83,84,85,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,131,],[-45,-41,-43,-44,-42,75,-44,75,75,75,75,-65,-64,75,75,-57,-62,-50,-52,-61,-56,-46,-48,-47,-49,75,-58,-60,-63,-59,75,-53,75,-66,-67,75,]),'=':([22,55,76,],[49,97,97,]),'<':([10,14,17,22,24,34,37,38,41,44,83,84,85,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,131,],[-45,-41,-43,-44,-42,62,-44,62,62,62,62,-65,-64,62,62,-57,None,-50,62,None,-56,-46,-48,-47,-49,62,None,None,None,None,62,62,62,-66,-67,62,]),'$end':([0,1,2,3,5,8,9,12,13,18,19,20,21,25,26,27,28,29,35,45,51,52,72,77,78,80,90,94,98,123,132,133,134,135,136,143,144,145,],[-3,-1,0,-4,-17,-19,-20,-22,-18,-16,-15,-23,-8,-2,-21,-6,-5,-14,-7,-38,-37,-10,-24,-36,-25,-26,-27,-9,-39,-28,-33,-34,-35,-29,-31,-72,-30,-32,]),'SHR':([10,14,17,22,24,34,37,38,41,44,83,84,85,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,131,],[-45,-41,-43,-44,-42,58,-44,58,58,58,58,-65,-64,58,58,-57,58,-50,58,58,-56,-46,-48,-47,-49,58,58,58,58,58,58,58,58,-66,-67,58,]),'REPEAT':([0,1,3,5,8,9,12,13,16,18,19,20,21,25,26,27,28,29,33,35,45,46,48,51,52,56,72,77,78,80,90,94,98,118,119,123,124,125,132,133,134,135,136,140,141,143,144,145,],[-3,16,-4,-17,-19,-20,-22,-18,-3,-16,-15,-23,-8,-2,-21,-6,-5,-14,-3,-7,-38,16,16,-37,-10,16,-24,-36,-25,-26,-27,-9,-39,16,16,-28,16,16,-33,-34,-35,-29,-31,16,16,-72,-30,-32,]),'STRING':([0,1,3,4,5,6,8,9,11,12,13,16,18,19,20,21,25,26,27,28,29,33,35,42,45,46,47,48,49,50,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,86,90,94,97,98,118,119,123,124,125,132,133,134,135,136,140,141,143,144,145,],[-3,17,-4,17,-17,17,-19,-20,17,-22,-18,-3,-16,-15,-23,-8,-2,-21,-6,-5,-14,-3,-7,17,-38,17,17,17,17,17,-37,-10,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-24,17,17,17,-36,-25,17,-26,17,-27,-9,17,-39,17,17,-28,17,17,-33,-34,-35,-29,-31,17,17,-72,-30,-32,]),'ELSE':([5,8,9,12,13,18,19,20,26,29,45,51,72,77,78,80,90,98,123,132,133,134,135,136,144,145,],[-17,-19,-20,-22,-18,-16,-15,-23,-21,-14,-38,-37,-24,-36,-25,-26,-27,-39,-28,-33,-34,-35,140,141,-30,-32,]),'GE':([10,14,17,22,24,34,37,38,41,44,83,84,85,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,131,],[-45,-41,-43,-44,-42,71,-44,71,71,71,71,-65,-64,71,71,-57,None,-50,71,None,-56,-46,-48,-47,-49,71,None,None,None,None,71,71,71,-66,-67,71,]),'EQ':([10,14,17,22,24,34,37,38,41,44,83,84,85,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,131,],[-45,-41,-43,-44,-42,69,-44,69,69,69,69,-65,-64,69,69,-57,None,-50,69,None,-56,-46,-48,-47,-49,69,None,None,None,None,69,69,69,-66,-67,69,]),'UNTIL':([3,5,8,9,12,13,16,18,19,20,21,25,26,27,28,29,35,45,46,51,52,72,77,78,80,90,94,98,123,132,133,134,135,136,143,144,145,],[-4,-17,-19,-20,-22,-18,-3,-16,-15,-23,-8,-2,-21,-6,-5,-14,-7,-38,86,-37,-10,-24,-36,-25,-26,-27,-9,-39,-28,-33,-34,-35,-29,-31,-72,-30,-32,]),'IF':([0,1,3,5,8,9,12,13,16,18,19,20,21,25,26,27,28,29,33,35,45,46,48,51,52,56,72,77,78,80,90,94,98,118,119,123,124,125,132,133,134,135,136,140,141,143,144,145,],[-3,23,-4,-17,-19,-20,-22,-18,-3,-16,-15,-23,-8,-2,-21,-6,-5,-14,-3,-7,-38,23,23,-37,-10,23,-24,-36,-25,-26,-27,-9,-39,23,23,-28,23,23,-33,-34,-35,-29,-31,23,23,-72,-30,-32,]),'AND':([10,14,17,22,24,34,37,38,41,44,83,84,85,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,131,],[-45,-41,-43,-44,-42,57,-44,57,57,57,57,-65,-64,57,-54,-57,-62,-50,-52,-61,-56,-46,-48,-47,-49,57,-58,-60,-63,-59,-51,-53,57,-66,-67,57,]),':':([22,],[48,]),'SHL':([10,14,17,22,24,34,37,38,41,44,83,84,85,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,131,],[-45,-41,-43,-44,-42,63,-44,63,63,63,63,-65,-64,63,63,-57,63,-50,63,63,-56,-46,-48,-47,-49,63,63,63,63,63,63,63,63,-66,-67,63,]),'TYPE':([0,1,3,5,8,9,12,13,16,18,19,20,21,25,26,27,28,29,33,35,45,46,51,52,56,72,77,78,80,90,94,96,98,123,132,133,134,135,136,137,143,144,145,],[-3,32,-4,-17,-19,-20,-22,-18,-3,-16,-15,-23,-8,-2,-21,-6,-5,-14,-3,-7,-38,32,-37,-10,32,-24,-36,-25,-26,-27,-9,130,-39,-28,-33,-34,-35,-29,-31,130,-72,-30,-32,]),'FLOAT':([0,1,3,4,5,6,8,9,11,12,13,16,18,19,20,21,25,26,27,28,29,33,35,42,45,46,47,48,49,50,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,86,90,94,97,98,118,119,123,124,125,132,133,134,135,136,140,141,143,144,145,],[-3,24,-4,24,-17,24,-19,-20,24,-22,-18,-3,-16,-15,-23,-8,-2,-21,-6,-5,-14,-3,-7,24,-38,24,24,24,24,24,-37,-10,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-24,24,24,24,-36,-25,24,-26,24,-27,-9,24,-39,24,24,-28,24,24,-33,-34,-35,-29,-31,24,24,-72,-30,-32,]),'|':([10,14,17,22,24,34,37,38,41,44,83,84,85,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,131,],[-45,-41,-43,-44,-42,74,-44,74,74,74,74,-65,-64,74,74,-57,-62,-50,-52,-61,-56,-46,-48,-47,-49,74,-58,-60,-63,-59,-51,-53,74,-66,-67,74,]),'BREAK':([0,1,3,5,8,9,12,13,16,18,19,20,21,25,26,27,28,29,33,35,45,46,48,51,52,56,72,77,78,80,90,94,98,118,119,123,124,125,132,133,134,135,136,140,141,143,144,145,],[-3,15,-4,-17,-19,-20,-22,-18,-3,-16,-15,-23,-8,-2,-21,-6,-5,-14,-3,-7,-38,15,15,-37,-10,15,-24,-36,-25,-26,-27,-9,-39,15,15,-28,15,15,-33,-34,-35,-29,-31,15,15,-72,-30,-32,]),'CONTINUE':([0,1,3,5,8,9,12,13,16,18,19,20,21,25,26,27,28,29,33,35,45,46,48,51,52,56,72,77,78,80,90,94,98,118,119,123,124,125,132,133,134,135,136,140,141,143,144,145,],[-3,30,-4,-17,-19,-20,-22,-18,-3,-16,-15,-23,-8,-2,-21,-6,-5,-14,-3,-7,-38,30,30,-37,-10,30,-24,-36,-25,-26,-27,-9,-39,30,30,-28,30,30,-33,-34,-35,-29,-31,30,30,-72,-30,-32,]),'error':([0,1,3,5,6,8,9,11,12,13,16,18,19,20,21,25,26,27,28,29,33,35,42,45,46,47,50,51,52,56,72,77,78,80,90,94,98,123,132,133,134,135,136,143,144,145,],[-3,31,-4,-17,40,-19,-20,43,-22,-18,-3,-16,-15,-23,-8,-2,-21,-6,-5,-14,-3,-7,82,-38,31,89,93,-37,-10,31,-24,-36,-25,-26,-27,-9,-39,-28,-33,-34,-35,-29,-31,-72,-30,-32,]),'{':([0,1,3,5,8,9,12,13,16,18,19,20,21,25,26,27,28,29,33,35,45,46,48,51,52,56,72,77,78,80,90,94,98,118,119,123,124,125,132,133,134,135,136,138,140,141,143,144,145,],[-3,33,-4,-17,-19,-20,-22,-18,-3,-16,-15,-23,-8,-2,-21,-6,-5,-14,-3,-7,-38,33,33,-37,-10,33,-24,-36,-25,-26,-27,-9,-39,33,33,-28,33,33,-33,-34,-35,-29,-31,33,33,33,-72,-30,-32,]),'>':([10,14,17,22,24,34,37,38,41,44,83,84,85,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,131,],[-45,-41,-43,-44,-42,70,-44,70,70,70,70,-65,-64,70,70,-57,None,-50,70,None,-56,-46,-48,-47,-49,70,None,None,None,None,70,70,70,-66,-67,70,]),'}':([3,5,8,9,12,13,18,19,20,21,25,26,27,28,29,33,35,45,51,52,56,72,77,78,80,90,94,98,123,132,133,134,135,136,143,144,145,],[-4,-17,-19,-20,-22,-18,-16,-15,-23,-8,-2,-21,-6,-5,-14,-3,-7,-38,-37,-10,98,-24,-36,-25,-26,-27,-9,-39,-28,-33,-34,-35,-29,-31,-72,-30,-32,]),'OR':([10,14,17,22,24,34,37,38,41,44,83,84,85,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,131,],[-45,-41,-43,-44,-42,68,-44,68,68,68,68,-65,-64,68,-54,-57,-62,-50,-52,-61,-56,-46,-48,-47,-49,-55,-58,-60,-63,-59,-51,-53,68,-66,-67,68,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instruction':([1,46,48,56,118,119,124,125,140,141,],[27,27,90,27,132,133,135,136,144,145,]),'expr_list':([6,47,],[39,87,]),'choice_instr':([1,46,48,56,118,119,124,125,140,141,],[5,5,5,5,5,5,5,5,5,5,]),'arg':([96,137,],[129,142,]),'repeat_instr':([1,46,48,56,118,119,124,125,140,141,],[8,8,8,8,8,8,8,8,8,8,]),'return_instr':([1,46,48,56,118,119,124,125,140,141,],[9,9,9,9,9,9,9,9,9,9,]),'const':([1,4,6,11,42,46,47,48,49,50,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,79,86,97,118,119,124,125,140,141,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'continue_instr':([1,46,48,56,118,119,124,125,140,141,],[12,12,12,12,12,12,12,12,12,12,]),'while_instr':([1,46,48,56,118,119,124,125,140,141,],[13,13,13,13,13,13,13,13,13,13,]),'init':([32,36,95,],[53,53,126,]),'program':([0,],[2,]),'assignment':([1,46,48,56,118,119,124,125,140,141,],[18,18,18,18,18,18,18,18,18,18,]),'labeled_instr':([1,46,48,56,118,119,124,125,140,141,],[19,19,19,19,19,19,19,19,19,19,]),'compound_instr':([1,46,48,56,118,119,124,125,138,140,141,],[20,20,20,20,20,20,20,20,143,20,20,]),'inits':([32,36,],[54,54,]),'declaration':([1,3,46,56,],[21,35,21,21,]),'args_list':([96,],[127,]),'condition':([42,50,86,],[81,92,120,]),'expr_list_or_empty':([47,],[88,]),'anything':([1,46,56,],[25,25,25,]),'break_instr':([1,46,48,56,118,119,124,125,140,141,],[26,26,26,26,26,26,26,26,26,26,]),'declarations':([1,46,56,],[3,3,3,]),'args_list_or_empty':([96,],[128,]),'fundef':([1,46,56,],[28,28,28,]),'anything_list':([0,16,33,],[1,46,56,]),'print_instr':([1,46,48,56,118,119,124,125,140,141,],[29,29,29,29,29,29,29,29,29,29,]),'expression':([1,4,6,11,42,46,47,48,49,50,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,79,86,97,118,119,124,125,140,141,],[34,38,41,44,83,34,41,34,91,83,34,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,83,131,34,34,34,34,34,34,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> anything_list','program',1,'p_program','Cparser.py',41),
  ('anything_list -> anything_list anything','anything_list',2,'p_anything_list','Cparser.py',48),
  ('anything_list -> <empty>','anything_list',0,'p_anything_list','Cparser.py',49),
  ('anything -> declarations','anything',1,'p_anything','Cparser.py',57),
  ('anything -> fundef','anything',1,'p_anything','Cparser.py',58),
  ('anything -> instruction','anything',1,'p_anything','Cparser.py',59),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',64),
  ('declarations -> declaration','declarations',1,'p_declarations','Cparser.py',65),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',74),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',75),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',82),
  ('inits -> init','inits',1,'p_inits','Cparser.py',83),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',92),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',114),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',115),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',116),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',117),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',118),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',119),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',120),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',121),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',122),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',123),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',124),
  ('print_instr -> PRINT expr_list ;','print_instr',3,'p_print_instr','Cparser.py',128),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',129),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',134),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',140),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',146),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',147),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',148),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',149),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',156),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',157),
  ('repeat_instr -> REPEAT anything_list UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',163),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',169),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',174),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',178),
  ('compound_instr -> { anything_list }','compound_instr',3,'p_compound_instr','Cparser.py',182),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',187),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',191),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',192),
  ('const -> STRING','const',1,'p_const','Cparser.py',193),
  ('expression -> ID','expression',1,'p_expressionId','Cparser.py',202),
  ('expression -> const','expression',1,'p_expression','Cparser.py',206),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',207),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',208),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',209),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',210),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',211),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',212),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',213),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',214),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',215),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',216),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',217),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',218),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',219),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',220),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',221),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',222),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',223),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',224),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',225),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',226),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',227),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',228),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',246),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',247),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',251),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',252),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',275),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',286),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',287),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',291),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',292),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',301),
]
